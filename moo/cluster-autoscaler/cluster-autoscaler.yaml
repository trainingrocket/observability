apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: aws-cluster-autoscaler
    release: cluster-autoscaler
  name: cluster-autoscaler-aws-cluster-autoscaler
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  labels:
    app: aws-cluster-autoscaler
    release: cluster-autoscaler
  name: cluster-autoscaler-aws-cluster-autoscaler
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - ""
  resourceNames:
  - cluster-autoscaler-status
  resources:
  - configmaps
  verbs:
  - delete
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app: aws-cluster-autoscaler
    release: cluster-autoscaler
  name: cluster-autoscaler-aws-cluster-autoscaler
rules:
- apiGroups:
  - ""
  resources:
  - events
  - endpoints
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - pods/eviction
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - pods/status
  verbs:
  - update
- apiGroups:
  - ""
  resourceNames:
  - cluster-autoscaler
  resources:
  - endpoints
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - watch
  - list
  - get
  - update
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - replicationcontrollers
  - persistentvolumeclaims
  - persistentvolumes
  verbs:
  - watch
  - list
  - get
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs:
  - watch
  - list
  - get
- apiGroups:
  - extensions
  resources:
  - replicasets
  - daemonsets
  verbs:
  - watch
  - list
  - get
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - watch
  - list
- apiGroups:
  - apps
  resources:
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - watch
  - list
  - get
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - watch
  - list
  - get
- apiGroups:
  - extensions
  resourceNames:
  - privileged-cluster-autoscaler-aws-cluster-autoscaler
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app: aws-cluster-autoscaler
    release: cluster-autoscaler
  name: cluster-autoscaler-aws-cluster-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cluster-autoscaler-aws-cluster-autoscaler
subjects:
- kind: ServiceAccount
  name: cluster-autoscaler-aws-cluster-autoscaler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: aws-cluster-autoscaler
    release: cluster-autoscaler
  name: cluster-autoscaler-aws-cluster-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-autoscaler-aws-cluster-autoscaler
subjects:
- kind: ServiceAccount
  name: cluster-autoscaler-aws-cluster-autoscaler
  namespace: kube-system
---
apiVersion: v1
data:
  AwsAccessKeyId: ""
  AwsSecretAccessKey: ""
kind: Secret
metadata:
  name: cluster-autoscaler-aws-cluster-autoscaler
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: aws-cluster-autoscaler
    release: cluster-autoscaler
  name: cluster-autoscaler-aws-cluster-autoscaler
spec:
  ports:
  - name: http
    port: 8085
    protocol: TCP
    targetPort: 8085
  selector:
    app: aws-cluster-autoscaler
    release: cluster-autoscaler
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: aws-cluster-autoscaler
    release: cluster-autoscaler
  name: cluster-autoscaler-aws-cluster-autoscaler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aws-cluster-autoscaler
      release: cluster-autoscaler
  template:
    metadata:
      annotations:
        iam.amazonaws.com/role: moo-cluster-autoscaler
      labels:
        app: aws-cluster-autoscaler
        release: cluster-autoscaler
    spec:
      containers:
      - command:
        - ./cluster-autoscaler
        - --cloud-provider=aws
        - --namespace=kube-system
        - --node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,kubernetes.io/cluster/moo
        - --logtostderr=true
        - --scale-down-utilization-threshold=1.5
        - --stderrthreshold=info
        - --v=4
        env:
        - name: AWS_REGION
          value: us-west-2
        image: k8s.gcr.io/cluster-autoscaler:v1.13.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health-check
            port: 8085
        name: aws-cluster-autoscaler
        ports:
        - containerPort: 8085
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - mountPath: /etc/ssl/certs/ca-bundle.crt
          name: ssl-certs
          readOnly: true
      serviceAccountName: cluster-autoscaler-aws-cluster-autoscaler
      tolerations: []
      volumes:
      - hostPath:
          path: /etc/ssl/certs/ca-certificates.crt
        name: ssl-certs
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app: aws-cluster-autoscaler
    release: cluster-autoscaler
  name: cluster-autoscaler-aws-cluster-autoscaler
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: aws-cluster-autoscaler
      release: cluster-autoscaler
---
apiVersion: extensions/v1beta1
kind: PodSecurityPolicy
metadata:
  name: privileged-cluster-autoscaler-aws-cluster-autoscaler
spec:
  allowedCapabilities:
  - '*'
  fsGroup:
    rule: RunAsAny
  hostIPC: true
  hostNetwork: true
  hostPID: true
  hostPorts:
  - max: 65536
    min: 1
  privileged: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - '*'
